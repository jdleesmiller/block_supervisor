= block_supervisor

* https://github.com/jdleesmiller/block_supervisor

== SYNOPSIS

Run a block in a child process with a restricted set of syscalls (using ptrace),
a restricted set of file descriptors, and fixed resource limits (using rlimits).
Only works on Linux.

The techniques used here are based on those of geordi
(htts://github.com/Eelis/geordi), the C++ eval bot. Here they're provided as a
general purpose library.

=== Usage

TODO

== REQUIREMENTS

Tested on:
* ruby 1.9.2p290 (2011-07-09 revision 32553) [i686-linux] (debian squeeze)

== INSTALLATION

Will one day be as simple as:
  gem install block_supervisor
but for now you have to download the source (see below).

== DEVELOPMENT

Get the source from github (http://github.com/jdleesmiller/block_supervisor) and
use bundler to get the development dependencies:

  gem install bundler
  bundle
  rake -T # list development tasks

== KNOWN ISSUES

If the supervised process is allowed to fork, and the (parent) supervised
process is killed, the child becomes orphaned, and it is allowed to continue
running. I'm not sure whether it's also free from tracing, but I imagine that it
is. (I've only tested this when ptrace is turned off.) This can happen in some
subtle ways: an exec like
  exec "my_app 1>/dev/null"
replaces the child process with a +sh+ process, which in turn spawns +my_app+; a
timeout, for example, will then kill +sh+ but not +my_app+.

== RELATED

+slave+ helps to ensure that a child process is killed when its parent is
killed, which is something that this library doesn't handle very well, at
present.

* http://www.ruby-forum.com/topic/141150
* http://codeforpeople.com/lib/ruby/slave/

== LICENSE

(The MIT License)

Copyright (c) 2011 John Lees-Miller

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

